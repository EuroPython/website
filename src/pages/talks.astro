---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Prose from "../components/prose/prose.astro";
import Filter from "../components/sessions/filter.astro";
import ListSessions from "../components/sessions/list-sessions.astro";
import { Separator } from "../components/separator/separator";

const sessions = await getCollection("sessions");
const talks = sessions.filter(s => s.data.session_type.substring(0, 4) === "Talk");

const allTracks = Array.from(
  new Set(talks.map((talk) => talk.data.track).filter((track) => track))
).sort();

const allLevels = Array.from(
  new Set(talks.map((talk) => talk.data.level).filter((level) => level))
).sort();

const title = "Talks";
const description = "A list of all the talks at the conference";
---

<Layout title={title} description={description}>
  <div class="px-6">
    <Prose>
      <h1>Talks</h1>
      <p>From Wednesday to Friday you can enjoy {talks.length} talks in 6 parallel tracks.</p>
      <p>Below there is a list of all the talks that were accepted from our <a href="/cfp">CFP</a>.</p>
      <h2>Filters</h2>
    </Prose>

    <Filter allTracks={allTracks} allLevels={allLevels} />

    <Prose>
      <h2>List of Talks by Track</h2>
    </Prose>

    {allTracks.map((track, index) => {
      const filteredSessions = talks.filter((session) => session.data.track === track);

      if (filteredSessions.length === 0) return null;

      return (
        <div class="track-group" data-track={track}>
          <Prose>
            <h3>{track}</h3>
          </Prose>
          <ListSessions sessions={filteredSessions} />
          {index !== allTracks.length - 1 ? <Separator /> : <div class="mb-20" />}
        </div>
      );
    })}
  </div>
</Layout>
