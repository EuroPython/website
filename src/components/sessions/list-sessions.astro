---
const { sessions } = Astro.props;
import Prose from "../prose/prose.astro";
import { Tag } from "../tag/tag";
import SessionSpeakers from "../session-speakers.astro";

type Session = {
  data: {
    title: string;
    speakers: Array<{
      collection: "speakers";
      slug: string;
    }>;
    session_type: string;
    track: string;
    level: string;
  };
  slug: string;
};
---

<ol class="sessions">
  {
    sessions.map((session: Session) => (
      <li
        class="mb-12"
        data-track={session.data.track}
        data-type={session.data.session_type}
        data-level={session.data.level}
      >
        <Prose>
          <h4>
            <a href={`/session/${session.slug}`} class="underline">
              {session.data.title}
            </a>
          </h4>
          <p>
            <span class="sr-only">Speakers:</span>
            {/* @ts-ignore */}
            <SessionSpeakers speakers={session.data.speakers} />
          </p>
        </Prose>

        <ul class="space-y-2 md:space-y-0 md:space-x-2 md:flex capitalize">
          {session.data.session_type && (
            <li class="md:inline-block">
              <Tag href={`/sessions?type=${encodeURIComponent(session.data.session_type)}`}>
                <span class="sr-only">Type:</span>
                {session.data.session_type}
              </Tag>
            </li>
          )}
          {session.data.track && (
            <li class="md:inline-block">
              <Tag href={`/sessions?track=${encodeURIComponent(session.data.track)}`}>
                <span class="sr-only">Track:</span>
                {session.data.track}
              </Tag>
            </li>
          )}
          {session.data.level && (
            <li class="md:inline-block">
              <Tag href={`/sessions?level=${encodeURIComponent(session.data.level)}`}>
                <span class="sr-only">Level:</span>
                {session.data.level}
              </Tag>
            </li>
          )}
        </ul>
      </li>
    ))
  }
</ol>
